PREFIX apf: <http://jena.apache.org/ARQ/property#>
PREFIX list: <http://jena.apache.org/ARQ/list#>
PREFIX schema: <http://schema.org/>
PREFIX my: <http://myschema.cz/animals#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX sx: <http://lod.taxonconcept.org/ontology/txn.owl#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>

CONSTRUCT {
     ?animalURI a sx:Animal ;
	sx:scientificName ?nameLatin;
	sx:commonName ?commonNames;
	sx:originalNameUsage ?name;
	sx:vernacularName ?otherNames;
	schema:type ?classURI ;
	schema:weight ?weightURI ;
	schema:height ?heightURI ;
	schema:ageOfWeaning ?ageOfWeaningURI ;
	schema:gestionPeriod ?gestionURI ;
	schema:diet ?dietURI ;
	schema:speed ?speedURI ;
	schema:charackteristic ?charakteristicURI ;
	schema:location ?locationURI ;
	schema:status ?statusC ;
	my:lifeSpan ?lifeSpanURI ;
	my:nameOfYoung ?nameOfYoung ;
	my:distinctiveFeature ?distinctiveFeature ;
	my:funFacts ?funFacts. 

     my:funFacts rdfs:subClassOf rdfs:comment .
     my:distinctiveFeature rdfs:subClassOf rdfs:comment .
     my:populationSize rdfs:subClassOf rdfs:comment .
     my:nameOfYoung rdfs:subClassOf schema:name .

     my:habitat rdfs:subClassOf schema:location .
	
     ?locationURI a schema:Location ; 
	sx:habitat ?habitat ;
	sx:locationName ?location .

    ?classURI a my:OrganismClassification  ;
	      sx:class ?classC ;
	      sx:kingdom ?kingdomC ;
	      sx:order ?orderC ;
	      sx:group ?groupC ;
	      sx:genus ?genusC ;
	      sx:familu ?familyC ;
	      sx:phylum ?phylumC .

   ?skosStatusScheme a skos:ConceptScheme ;
	rdfs:label "Animals status"@en .

   ?statusC a skos:Concept;
	skos:inScheme ?skosStatusScheme ;
        skos:prefLabel ?status .

   ?skosTypeScheme a skos:ConceptScheme ;
	rdfs:label "Animals hiearchy"@en ;
	skos:hasTopConcept ?classC .

   ?classC a skos:Concept;
	skos:inScheme ?skosTypeScheme ;
	skos:topConceptOf ?skosTypeScheme ;
   	skos:prefLabel ?class ;
   	skos:narrower ?kingdom .

   ?kingdomC a skos:Concept;
	skos:inScheme ?skosTypeScheme ;
   	skos:prefLabel ?kingdom ;
   	skos:broader ?class ;
   	skos:narrower ?order .

   ?orderC a skos:Concept;
	skos:inScheme ?skosTypeScheme ;
   	skos:prefLabel ?order ;
   	skos:broader ?kingdom ;
   	skos:narrower ?group .

   ?groupC a skos:Concept;
	skos:inScheme ?skosTypeScheme ;
   	skos:prefLabel ?group ;
   	skos:broader ?order ;
   	skos:narrower ?genus .
   
   ?genusC a skos:Concept;
	skos:inScheme ?skosTypeScheme ;
	skos:prefLabel ?genus ;
   	skos:broader ?group ;
   	skos:narrower ?family .


   ?familyC a skos:Concept;
	skos:inScheme ?skosTypeScheme ;
   	skos:prefLabel ?family ;
   	skos:broader ?genus ;
   	skos:narrower ?phylum .
   
   ?phylumC a skos:Concept ;
	skos:inScheme ?skosTypeScheme ;  
	skos:prefLabel ?phylum ;
   	skos:broader ?family .
   	   	
    ?charakteristicURI a my:Characteristic;
	sx:behavioralNote ?behaviour ;
	my:predators ?predators ;
	my:skin ?skin ;
	my:lifestyle ?lifestyle ;
	my:populationSize ?populationSize ;
	my:prey ?prey ;
	my:numberSpecies ?numberSpecies .
    
    ?charakteristicURI schema:color ?color .

    ?speedURI a schema:Speed ;
	schema:maxValue ?speed ;
	schema:unitCode ?speedCode .

    ?dietURI a schema:Diet ;
	schema:overview ?diet .

    ?heightURI a schema:Height ;
	schema:minValue ?minHeight ;
	schema:maxValue ?maxHeight ;
	schema:unitCode ?heightCode .

    ?weightURI a schema:Weight ;
	schema:minValue ?minWeight ;
	schema:maxValue ?maxWeight ;
	schema:unitCode ?weightCode .

    ?gestionURI a schema:GestionPeriod ;
	schema:minValue ?minGestionPeriod ;
	schema:maxValue ?maxGestionPeriod ;
	schema:unitCode ?gestionPeriodCode .

    ?ageOfWeaningURI a schema:AgeOfWeaning ;
	schema:minValue ?minAgeOfWeaning ;
	schema:maxValue ?maxAgeOfWeaning ;
	schema:unitCode ?ageOfWeaningCode .
	
    ?lifeSpanURI a schema:QuantitativeValue ;
	schema:minValue ?minLifeSpan ;
	schema:maxValue ?maxLifeSpan ;
	schema:unitCode ?lifeSpanCode .
}
WHERE {
  BIND("http://jakubvejr.org/animals/" AS ?baseURI)
  BIND(IRI(CONCAT(?baseURI,ENCODE_FOR_URI(lcase(REPLACE(?l, " ", "_"))))) as ?animalURI)

  BIND(URI(CONCAT(?baseURI, ENCODE_FOR_URI(lcase(REPLACE(?l, " ", "_"))), "/animalClassification")) AS ?classURI)
  BIND(URI(CONCAT(?baseURI, ENCODE_FOR_URI(lcase(REPLACE(?l, " ", "_"))), "/characteristic")) AS ?charakteristicURI)
  BIND(URI(CONCAT(?baseURI, ENCODE_FOR_URI(lcase(REPLACE(?l, " ", "_"))), "/speed")) AS ?speedURI)
  BIND(URI(CONCAT(?baseURI, ENCODE_FOR_URI(lcase(REPLACE(?l, " ", "_"))), "/diet")) AS ?dietURI)
  BIND(URI(CONCAT(?baseURI, ENCODE_FOR_URI(lcase(REPLACE(?l, " ", "_"))), "/location")) AS ?locationURI)
  BIND(URI(CONCAT(?baseURI, ENCODE_FOR_URI(lcase(REPLACE(?l, " ", "_"))), "/gestionPeriod")) AS ?gestionURI)
  BIND(URI(CONCAT(?baseURI, ENCODE_FOR_URI(lcase(REPLACE(?l, " ", "_"))), "/ageOfWeaning")) AS ?ageOfWeaningURI)
  BIND(URI(CONCAT(?baseURI, ENCODE_FOR_URI(lcase(REPLACE(?l, " ", "_"))), "/height")) AS ?heightURI)
  BIND(URI(CONCAT(?baseURI, ENCODE_FOR_URI(lcase(REPLACE(?l, " ", "_"))), "/weight")) AS ?weightURI)
  BIND(URI(CONCAT(?baseURI, ENCODE_FOR_URI(lcase(REPLACE(?l, " ", "_"))), "/lifespan")) AS ?lifeSpanURI)

  BIND (xsd:decimal(replace(STRBEFORE(?n, "("),"[^0-9.]",'')) AS ?speed)
  BIND (replace(STRBEFORE(?n, "("),"[^a-zA-Z/]",'') AS ?speedCode)

  BIND (IF(STRAFTER(?x, "-"), replace(STRAFTER(?x, "-"),"[^a-zA-Zá-ú/]",''), replace(?x ,"[^a-zA-Zá-ú/]",'')) AS ?lifeSpanCode)
  BIND (xsd:decimal(replace(STRAFTER(?x, "-"),"[^0-9,./]",'')) AS ?minLifeSpan)
  BIND (IF(STRBEFORE(?x, "-"),xsd:decimal(replace(STRBEFORE(?x, "-"),"[^0-9,./]",'')),xsd:decimal(replace(?x,"[^0-9,./]",''))) AS ?maxLifeSpan)

  BIND (IF(STRAFTER(STRBEFORE(?q, "("), "-"), replace(STRAFTER(STRBEFORE(?q, "("), "-"),"[^a-zA-Z/]",''), replace(STRBEFORE(?q, "("),"[^a-zA-Z/]",'')) AS ?heightCode)
  BIND (IF(STRAFTER(STRBEFORE(?q, "("), "-"), xsd:decimal(replace(STRAFTER(STRBEFORE(?q, "("), "-"),"[^0-9,./]",'')), '') AS ?minHeight)
  BIND (IF(STRBEFORE(STRBEFORE(?q, "("), "-"), xsd:decimal(replace(STRBEFORE(STRBEFORE(?q, "("), "-"),"[^0-9,./]",'')), xsd:decimal(replace(STRBEFORE(?q, "("), "[^0-9,./]",''))) AS ?maxHeight)

  BIND (IF(STRAFTER(?j, "-"),replace(STRAFTER(?j, "-"),"[^a-zA-Z/]",''), replace(?j , "[^a-zA-Z/]",'')) AS ?ageOfWeaningCode)
  BIND (IF(STRAFTER(?j, "-"), xsd:decimal(replace(STRAFTER(?j, "-"),"[^0-9,./]",'')), '') AS ?minAgeOfWeaning)
  BIND (IF(STRBEFORE(?j, "-"),xsd:decimal(replace(STRBEFORE(?j, "-"),"[^0-9,./]",'')), xsd:decimal(replace(?j ,"[^0-9,./]",''))) AS ?maxAgeOfWeaning)

  BIND (IF(STRAFTER(?h, "-"), replace(STRAFTER(?h, "-"),"[^a-zA-Z/]",''), replace(?h,"[^a-zA-Z/]",'')) AS ?gestionPeriodCode)
  BIND (IF(STRAFTER(?h, "-"), xsd:decimal(replace(STRAFTER(?h, "-"),"[^0-9,./]",'')), '') AS ?minGestionPeriod)
  BIND (IF(STRBEFORE(?h, "-"), xsd:decimal(replace(STRBEFORE(?h, "-"),"[^0-9,./]",'')), xsd:decimal(replace(?h, "[^0-9,./]",''))) AS ?maxGestionPeriod)

  BIND (IF(STRAFTER(STRBEFORE(?ah, "("), "-"), replace(STRAFTER(STRBEFORE(?ah, "("), "-"),"[^a-zA-Z/]",''), replace(STRBEFORE(?ah, "("),"[^a-zA-Z/]",'')) AS ?weightCode)
  BIND (IF(STRAFTER(STRBEFORE(?ah, "("), "-"), xsd:decimal(replace(STRAFTER(STRBEFORE(?ah, "("), "-"),"[^0-9,./]",'')), '') AS ?minWeight)
  BIND (IF(STRBEFORE(STRBEFORE(?ah, "("), "-"), xsd:decimal(replace(STRBEFORE(STRBEFORE(?ah, "("), "-"),"[^0-9,./]",'')), xsd:decimal(replace(STRBEFORE(?ah, "("), "[^0-9,./]",''))) AS ?maxWeight)

  BIND (xsd:integer(?a) AS ?numberSpecies)
  BIND (STRLANG(?o, "en") AS ?populationSize)
  BIND (STRLANG(?b, "en") AS ?group)
  BIND (STRLANG(?c, "la") AS ?genus)
  BIND (STRLANG(?l, "en") AS ?name)
  BIND (STRLANG(?k, "la") AS ?nameLatin)
  BIND (STRLANG(?e, "en") AS ?prey)
  BIND (STRLANG(?f, "en") AS ?location)
  BIND (STRLANG(?g, "en") AS ?skin)
  BIND (STRLANG(?i, "la") AS ?kingdom)
  BIND (STRLANG(?r, "en") AS ?otherNames)
  BIND (STRLANG(?s, "la") AS ?class)
  BIND (STRLANG(?af, "en") AS ?status)

  BIND (URI(CONCAT(?baseURI, "skosTypeScheme/")) AS ?skosTypeScheme)
  BIND (URI(CONCAT(?baseURI, "skosStatusScheme/")) AS ?skosStatusScheme)
  BIND (URI(CONCAT(?baseURI, "concept/",?s)) AS ?classC)
  BIND (URI(CONCAT(?baseURI, "concept/",?i)) AS ?kingdomC)
  BIND (URI(CONCAT(?baseURI, "concept/",?ab)) AS ?orderC)
  BIND (URI(CONCAT(?baseURI, "concept/",?b)) AS ?groupC)
  BIND (URI(CONCAT(?baseURI, "concept/",?c)) AS ?genusC)
  BIND (URI(CONCAT(?baseURI, "concept/",?ad)) AS ?familyC)
  BIND (URI(CONCAT(?baseURI, "concept/",?al)) AS ?phylumC)
  BIND (URI(CONCAT(?baseURI, "concept/",ENCODE_FOR_URI(?af))) AS ?statusC)

  BIND (STRLANG(?t, "en") AS ?lifestyle)
  
  ?colors apf:strSplit (?v", ")
  BIND(xsd:string(?colors) as ?color)  

  BIND (STRLANG(?y, "en") AS ?predators)
  BIND (STRLANG(?aa, "en") AS ?commonNames)
  BIND (STRLANG(?ab, "en") AS ?order)
  BIND (STRLANG(?m, "en") AS ?diet)
  BIND (STRLANG(?w, "en") AS ?nameOfYoung)
  BIND (STRLANG(?ad, "la") AS ?family)
  BIND (STRLANG(?ae, "en") AS ?habitat)
  
  BIND (STRLANG(?al, "en") AS ?phylum)
  BIND (STRLANG(?ac, "en") AS ?behaviour)
  BIND (STRLANG(?ag, "en") AS ?distinctiveFeature)
  BIND (STRLANG(?z, "en") AS ?funFacts)
}
OFFSET 1

